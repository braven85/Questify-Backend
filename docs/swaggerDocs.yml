tags:
  - name: Users
    description: Users endpoints
  - name: Card
    description: Card endpoints

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      required:
        - email
        - password
      properties:
        id:
          type: string
          example: 62a5e76be56b359bbce6d0a2
          description: The auto-generated id of the user
        email:
          type: string
          format: email
          example: email@email.com
          description: User's email address
        password:
          type: string
          format: password
          example: $2b$06$Urq1ur4hbPril/4jHZnleu9TQL86.mMdPJne5m599OlK1OV/3W8v2
          description: User's bcrypted password
    Registration Request:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          minimum: 3
          maximum: 254
          example: email@email.com
          description: User's email
        password:
          type: string
          format: password
          minimum: 8
          maximum: 100
          example: qwerty123
          description: User's password
    Registration Response:
      type: object
      properties:
        email:
          type: string
          format: email
          example: email@email.com
          description: User's email
        id:
          type: string
          example: 62a5e76be56b359bbce6d0a2
          description: User's id
    Login Request:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          example: email@email.com
          description: User's email
        password:
          type: string
          format: password
          example: qwerty123
          description: User's password
    Login Response:
      type: object
      properties:
        accessToken:
          type: string
          format: jwt
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYyYTVlNzZiZTU2YjM1OWJiY2U2ZDBhMiIsImVtYWlsIjoicmFkZWtAZ21haWwuY29tIiwiaWF0IjoxNjU1MDUyMDM4LCJleHAiOjE2NTUwNTU2Mzh9.4uW-8WYaoqRFjRmFbzoWgUlmTgWG_JxrjSbi6shsElk
          description: Session's access token (needed for all requests)
        refreshToken:
          type: string
          format: jwt
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYyYTVlNzZiZTU2YjM1OWJiY2U2ZDBhMiIsImVtYWlsIjoicmFkZWtAZ21haWwuY29tIiwiaWF0IjoxNjU1MDUyMDM4LCJleHAiOjE2NTUwNTU2Mzh9.5BVPRez1ow7xRADNCj1OW7bxezd7AWPKeRv6aXSBkss
          description: Session's refresh token (needed for /auth/refresh)
        sid:
          type: string
          format: uuid
          example: 05b4cd18-f5af-4aac-9eed-272c4f16464e
          description: Session's id (needed for /auth/refresh)
        userData:
          type: object
          properties:
            email:
              type: string
              format: email
              example: email@email.com
              description: User's email
            id:
              type: string
              example: 62a5e76be56b359bbce6d0a2
              description: User's id
            cards:
              type: object
              description: User's card
              properties:
                _id:
                  type: string
                  example: 62a6222d69d60457c1ec1437
                  description: Card's id
                title:
                  type: string
                  example: Do the laundry
                  description: Card's title
                difficulty:
                  type: string
                  example: Normal
                  enum:
                    - Easy
                    - Normal
                    - Hard
                  description: Card's difficulty
                category:
                  type: string
                  example: LEARNING
                  enum:
                    - STUFF
                    - FAMILY
                    - HEALTH
                    - LEARNING
                    - LEISURE
                    - WORK
                  description: Card's category
                date:
                  type: string
                  example: 2022-06-13
                  description: Card's date (deadline, if card is challenge)
                time:
                  type: string
                  example: 11:40
                  description: Card's time (deadline, if card is challenge)
                type:
                  type: string
                  example: quest
                  enum:
                    - quest
                    - challenge
                  description: Card's type
                isCompleted:
                  type: boolean
                  example: false
                  description: Card's status
                owner:
                  type: string
                  example: 62a6220969d60457c1ec142e
                  description: Card's owner's id
    Refresh Tokens Request:
      type: object
      required:
        - sid
      properties:
        sid:
          type: string
          format: uuid
          example: 05b4cd18-f5af-4aac-9eed-272c4f16464e
          description: Session's id ('sid' field after authentication)
    Refresh Tokens Response:
      type: object
      properties:
        newAccessToken:
          type: string
          format: jwt
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYyYTVlNzZiZTU2YjM1OWJiY2U2ZDBhMiIsImVtYWlsIjoicmFkZWtAZ21haWwuY29tIiwiaWF0IjoxNjU1MDUyMDM4LCJleHAiOjE2NTUwNTU2Mzh9.4uW-8WYaoqRFjRmFbzoWgUlmTgWG_JxrjSbi6shsElk
          description: New access token
        newRefreshToken:
          type: string
          format: jwt
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYyYTVlNzZiZTU2YjM1OWJiY2U2ZDBhMiIsImVtYWlsIjoicmFkZWtAZ21haWwuY29tIiwiaWF0IjoxNjU1MDUyMDM4LCJleHAiOjE2NTUwNTU2Mzh9.5BVPRez1ow7xRADNCj1OW7bxezd7AWPKeRv6aXSBkss
          description: New refresh token
        newSid:
          type: string
          format: uuid
          example: 05b4cd18-f5af-4aac-9eed-272c4f16464e
          description: New session's id
    Card Request:
      type: object
      required:
        - title
        - difficulty
        - date
        - type
      properties:
        title:
          type: string
          example: Take out the trash
          minimum: 2
          maximum: 100
          description: Card's title
        difficulty:
          type: string
          example: Normal
          enum:
            - Easy
            - Normal
            - Hard
          description: Card's difficulty
        category:
          type: string
          example: LEARNING
          enum:
            - STUFF
            - FAMILY
            - HEALTH
            - LEARNING
            - LEISURE
            - WORK
          description: Card's category
        date:
          type: string
          example: 2022-06-13
          description: Card's date (deadline, if card is challenge)
        time:
          type: string
          example: 11:40
          description: Card's time (deadline, if card is challenge)
        type:
          type: string
          example: quest
          enum:
            - quest
            - challenge
          description: Card's type
    Card Response:
      type: object
      properties:
        createdCard:
          type: object
          properties:
            title:
              type: string
              example: Take out the trash
              description: Card's title
            difficulty:
              type: string
              example: Normal
              enum:
                - Easy
                - Normal
                - Hard
              description: Card's difficulty
            category:
              type: string
              example: LEARNING
              enum:
                - STUFF
                - FAMILY
                - HEALTH
                - LEARNING
                - LEISURE
                - WORK
              description: Card's category
            date:
              type: string
              example: 2022-06-13
              description: Card's date (deadline, if card is challenge)
            time:
              type: string
              example: 11:40
              description: Card's time (deadline, if card is challenge)
            type:
              type: string
              example: quest
              enum:
                - quest
                - challenge
              description: Card's type
            isCompleted:
              type: boolean
              example: false
              description: Card's status
            owner:
              type: string
              example: 62a6220969d60457c1ec142e
              description: Card's owner's id
            _id:
              type: string
              example: 62a6220969d60457c1ec142e
              description: Card's id
    Get Card Response:
      type: object
      description: User's cards
      properties:
        cards:
          type: object
          properties:
            _id:
              type: string
              example: 62a6220969d60457c1ec142e
              description: Card's id
            title:
              type: string
              example: Take out the trash
              description: Card's title
            difficulty:
              type: string
              example: Normal
              enum:
                - Easy
                - Normal
                - Hard
              description: Card's difficulty
            category:
              type: string
              example: LEARNING
              enum:
                - STUFF
                - FAMILY
                - HEALTH
                - LEARNING
                - LEISURE
                - WORK
              description: Card's category
            date:
              type: string
              example: 2022-06-13
              description: Card's date (deadline, if card is challenge)
            time:
              type: string
              example: 11:40
              description: Card's time (deadline, if card is challenge)
            type:
              type: string
              example: quest
              enum:
                - quest
                - challenge
              description: Card's type
            isCompleted:
              type: boolean
              example: false
              description: Card's status
            owner:
              type: string
              example: 62a6220969d60457c1ec142e
              description: Card's owner's id
    Edit Card Request:
      type: object
      properties:
        title:
          type: string
          example: Clean the toilet
          minimum: 2
          maximum: 100
          description: Card's title
        difficulty:
          type: string
          example: Hard
          enum:
            - Easy
            - Normal
            - Hard
          description: Card's difficulty
        category:
          type: string
          example: STUFF
          enum:
            - STUFF
            - FAMILY
            - HEALTH
            - LEARNING
            - LEISURE
            - WORK
          description: Card's category
        date:
          type: string
          example: 2022-06-13
          description: Card's date (deadline, if card is challenge)
        time:
          type: string
          example: 11:40
          description: Card's time (deadline, if card is challenge)
        type:
          type: string
          example: quest
          enum:
            - quest
            - challenge
          description: Card's type
    Edit Card Response:
      type: object
      properties:
        editedCard:
          type: object
          properties:
            title:
              type: string
              example: Clean the toilet
              description: Card's title
            difficulty:
              type: string
              example: Hard
              enum:
                - Easy
                - Normal
                - Hard
              description: Card's difficulty
            category:
              type: string
              example: STUFF
              enum:
                - STUFF
                - FAMILY
                - HEALTH
                - LEARNING
                - LEISURE
                - WORK
              description: Card's category
            date:
              type: string
              example: 2022-06-13
              description: Card's date (deadline, if card is challenge)
            time:
              type: string
              example: 11:40
              description: Card's time (deadline, if card is challenge)
            type:
              type: string
              example: quest
              enum:
                - quest
                - challenge
              description: Card's type
            isCompleted:
              type: boolean
              example: false
              description: Card's status
    Completed Card Response:
      type: object
      properties:
        message:
          type: string
          example: Card status was changed to 'completed'
        editedCard:
          type: object
          properties:
            _id:
              type: string
              example: 62a6220969d60457c1ec142e
              description: Card's id
            title:
              type: string
              example: Clean the toilet
              description: Card's title
            difficulty:
              type: string
              example: Hard
              enum:
                - Easy
                - Normal
                - Hard
              description: Card's difficulty
            category:
              type: string
              example: STUFF
              enum:
                - STUFF
                - FAMILY
                - HEALTH
                - LEARNING
                - LEISURE
                - WORK
              description: Card's category
            date:
              type: string
              example: 2022-06-13
              description: Card's date (deadline, if card is challenge)
            time:
              type: string
              example: 11:40
              description: Card's time (deadline, if card is challenge)
            type:
              type: string
              example: quest
              enum:
                - quest
                - challenge
              description: Card's type
            isCompleted:
              type: boolean
              example: true
              description: Card's status
            owner:
              type: string
              example: 62a6220969d60457c1ec142e
              description: Card's owner's id

paths:
  /api/users:
    get:
      summary: Returns the list of all users
      tags: [Users]
      description: Get the list of all users
      responses:
        "200":
          description: The list of all users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
  /api/users/register:
    post:
      summary: User registration
      tags: [Users]
      description: User registration
      requestBody:
        description: Registration's object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Registration Request"
      responses:
        "201":
          description: User successfully created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Registration Response"
        "400":
          description: Bad request (invalid request body)
        "409":
          description: User already exists
  /api/users/login:
    post:
      summary: User authentication
      tags: [Users]
      description: User authentication
      requestBody:
        description: Authentication's object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Login Request"
      responses:
        "200":
          description: Successful login
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Login Response"
        "400":
          description: Bad request (invalid request body)
        "403":
          description: User with provided email doesn't exist / Password is wrong
  /api/users/logout:
    post:
      summary: User logout
      tags: [Users]
      description: User logout
      security:
        - bearerAuth: []
      responses:
        "204":
          description: Successful logout
        "400":
          description: No accessToken provided
        "401":
          description: Unauthorized
  /api/users/refresh:
    post:
      summary: Get new pair of tokens (use refreshToken instead of accessToken)
      tags: [Users]
      description: Get new pair of tokens (use refreshToken instead of accessToken)
      security:
        - bearerAuth: []
      requestBody:
        description: Object with session's id
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Refresh Tokens Request"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Refresh Tokens Response"
        "400":
          description: No sid provided
        "401":
          description: Unauthorized
        "403":
          description: Wrong sid provided
  /api/card:
    post:
      summary: Create card
      tags: [Card]
      description: Create card
      security:
        - bearerAuth: []
      requestBody:
        description: Card's object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Card Request"
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Card Response"
        "400":
          description: Bad Request (invalid request body)
        "401":
          description: Unauthorized
        "403":
          description: Card's title must be unique
        "500":
          description: Card validation failed
    get:
      summary: Get all user's cards
      tags: [Card]
      description: Get all user's cards
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Get Card Response"
        "401":
          description: Unauthorized
  /api/card/{cardId}:
    patch:
      summary: Edit card
      tags: [Card]
      description: Edit card
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: cardId
          schema:
            type: string
          required: true
          description: Edited card ID
      requestBody:
        description: Card's object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Edit Card Request"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Edit Card Response"
        "400":
          description: Invalid cardId
        "401":
          description: Unauthorized
        "404":
          description: Card not found!
    delete:
      summary: Delete card
      tags: [Card]
      description: Delete card
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: cardId
          schema:
            type: string
          required: true
          description: ID of a card to delete
      responses:
        "204":
          description: Successful operation
        "400":
          description: Invalid cardId
        "401":
          description: Unauthorized
        "404":
          description: No card with given Id in database
  /api/card/complete/{cardId}:
    patch:
      summary: Confirm that card is completed
      tags: [Card]
      description: Confirm that card is completed
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: cardId
          schema:
            type: string
          required: true
          description: ID of a card to complete
      responses:
        "200":
          description: Card status was changed to 'completed'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Completed Card Response"
        "400":
          description: Invalid cardId
        "401":
          description: Unauthorized
        "409":
          description: Card has already been completed
